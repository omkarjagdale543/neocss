/**
 * NeoCSS Transition Utilities
 * 
 * YAML Metadata:
 * prompt: Complete remaining utility classes for global compatibility
 * purpose: Transition and animation utilities for smooth interactions
 * created: 2025-07-08
 * features: transition properties, durations, timing functions, delays, animations
 */

/* ==========================================================================
   TRANSITION PROPERTY
   ========================================================================== */

.transition-none { transition-property: none; }
.transition-all { transition-property: all; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition { transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition-colors { transition-property: color, background-color, border-color, text-decoration-color, fill, stroke; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition-opacity { transition-property: opacity; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition-shadow { transition-property: box-shadow; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition-transform { transition-property: transform; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }

/* ==========================================================================
   TRANSITION DURATION
   ========================================================================== */

.duration-0 { transition-duration: var(--neo-duration-0); }
.duration-75 { transition-duration: var(--neo-duration-75); }
.duration-100 { transition-duration: var(--neo-duration-100); }
.duration-150 { transition-duration: var(--neo-duration-150); }
.duration-200 { transition-duration: var(--neo-duration-200); }
.duration-300 { transition-duration: var(--neo-duration-300); }
.duration-500 { transition-duration: var(--neo-duration-500); }
.duration-700 { transition-duration: var(--neo-duration-700); }
.duration-1000 { transition-duration: var(--neo-duration-1000); }

/* ==========================================================================
   TRANSITION TIMING FUNCTION
   ========================================================================== */

.ease-linear { transition-timing-function: var(--neo-ease-linear); }
.ease-in { transition-timing-function: var(--neo-ease-in); }
.ease-out { transition-timing-function: var(--neo-ease-out); }
.ease-in-out { transition-timing-function: var(--neo-ease-in-out); }

/* Custom easing functions */
.ease-in-back { transition-timing-function: var(--neo-ease-in-back); }
.ease-out-back { transition-timing-function: var(--neo-ease-out-back); }
.ease-in-out-back { transition-timing-function: var(--neo-ease-in-out-back); }

.ease-in-circ { transition-timing-function: var(--neo-ease-in-circ); }
.ease-out-circ { transition-timing-function: var(--neo-ease-out-circ); }
.ease-in-out-circ { transition-timing-function: var(--neo-ease-in-out-circ); }

.ease-in-expo { transition-timing-function: var(--neo-ease-in-expo); }
.ease-out-expo { transition-timing-function: var(--neo-ease-out-expo); }
.ease-in-out-expo { transition-timing-function: var(--neo-ease-in-out-expo); }

/* ==========================================================================
   TRANSITION DELAY
   ========================================================================== */

.delay-0 { transition-delay: 0ms; }
.delay-75 { transition-delay: 75ms; }
.delay-100 { transition-delay: 100ms; }
.delay-150 { transition-delay: 150ms; }
.delay-200 { transition-delay: 200ms; }
.delay-300 { transition-delay: 300ms; }
.delay-500 { transition-delay: 500ms; }
.delay-700 { transition-delay: 700ms; }
.delay-1000 { transition-delay: 1000ms; }

/* ==========================================================================
   ANIMATION
   ========================================================================== */

.animate-none { animation: none; }
.animate-spin { animation: var(--neo-animation-spin); }
.animate-ping { animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite; }
.animate-pulse { animation: var(--neo-animation-pulse); }
.animate-bounce { animation: var(--neo-animation-bounce); }

/* Fade animations */
.animate-fade-in { animation: var(--neo-animation-fade-in); }
.animate-fade-out { animation: var(--neo-animation-fade-out); }

/* Slide animations */
.animate-slide-in-up { animation: var(--neo-animation-slide-in-up); }
.animate-slide-in-down { animation: var(--neo-animation-slide-in-down); }
.animate-slide-in-left { animation: var(--neo-animation-slide-in-left); }
.animate-slide-in-right { animation: var(--neo-animation-slide-in-right); }

/* Scale animations */
.animate-scale-in { animation: var(--neo-animation-scale-in); }
.animate-scale-out { animation: var(--neo-animation-scale-out); }

/* Loading animations */
.animate-skeleton { animation: var(--neo-animation-skeleton); }
.animate-progress { animation: var(--neo-animation-progress-indeterminate); }

/* ==========================================================================
   ANIMATION KEYFRAMES
   ========================================================================== */

@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

@keyframes wiggle {
  0%, 100% { transform: rotate(-3deg); }
  50% { transform: rotate(3deg); }
}

@keyframes heartbeat {
  0% { transform: scale(1); }
  14% { transform: scale(1.3); }
  28% { transform: scale(1); }
  42% { transform: scale(1.3); }
  70% { transform: scale(1); }
}

@keyframes flash {
  0%, 50%, 100% { opacity: 1; }
  25%, 75% { opacity: 0; }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-10px); }
  20%, 40%, 60%, 80% { transform: translateX(10px); }
}

@keyframes swing {
  20% { transform: rotate(15deg); }
  40% { transform: rotate(-10deg); }
  60% { transform: rotate(5deg); }
  80% { transform: rotate(-5deg); }
  100% { transform: rotate(0deg); }
}

@keyframes tada {
  0% { transform: scale(1); }
  10%, 20% { transform: scale(0.9) rotate(-3deg); }
  30%, 50%, 70%, 90% { transform: scale(1.1) rotate(3deg); }
  40%, 60%, 80% { transform: scale(1.1) rotate(-3deg); }
  100% { transform: scale(1) rotate(0); }
}

@keyframes wobble {
  0% { transform: translateX(0%); }
  15% { transform: translateX(-25%) rotate(-5deg); }
  30% { transform: translateX(20%) rotate(3deg); }
  45% { transform: translateX(-15%) rotate(-3deg); }
  60% { transform: translateX(10%) rotate(2deg); }
  75% { transform: translateX(-5%) rotate(-1deg); }
  100% { transform: translateX(0%); }
}

@keyframes jello {
  11.1% { transform: skewX(-12.5deg) skewY(-12.5deg); }
  22.2% { transform: skewX(6.25deg) skewY(6.25deg); }
  33.3% { transform: skewX(-3.125deg) skewY(-3.125deg); }
  44.4% { transform: skewX(1.5625deg) skewY(1.5625deg); }
  55.5% { transform: skewX(-0.78125deg) skewY(-0.78125deg); }
  66.6% { transform: skewX(0.390625deg) skewY(0.390625deg); }
  77.7% { transform: skewX(-0.1953125deg) skewY(-0.1953125deg); }
  88.8% { transform: skewX(0.09765625deg) skewY(0.09765625deg); }
  100% { transform: skewX(0deg) skewY(0deg); }
}

@keyframes rubber-band {
  0% { transform: scale(1); }
  30% { transform: scaleX(1.25) scaleY(0.75); }
  40% { transform: scaleX(0.75) scaleY(1.25); }
  50% { transform: scaleX(1.15) scaleY(0.85); }
  65% { transform: scaleX(0.95) scaleY(1.05); }
  75% { transform: scaleX(1.05) scaleY(0.95); }
  100% { transform: scale(1); }
}

/* Additional animation utilities */
.animate-wiggle { animation: wiggle 1s ease-in-out infinite; }
.animate-heartbeat { animation: heartbeat 1.5s ease-in-out infinite; }
.animate-flash { animation: flash 2s infinite; }
.animate-shake { animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both; }
.animate-swing { animation: swing 1s ease-in-out; }
.animate-tada { animation: tada 1s ease-in-out; }
.animate-wobble { animation: wobble 1s ease-in-out; }
.animate-jello { animation: jello 1s ease-in-out; }
.animate-rubber-band { animation: rubber-band 1s ease-in-out; }

/* ==========================================================================
   ANIMATION ITERATION COUNT
   ========================================================================== */

.animate-once { animation-iteration-count: 1; }
.animate-twice { animation-iteration-count: 2; }
.animate-infinite { animation-iteration-count: infinite; }

/* ==========================================================================
   ANIMATION DIRECTION
   ========================================================================== */

.animate-normal { animation-direction: normal; }
.animate-reverse { animation-direction: reverse; }
.animate-alternate { animation-direction: alternate; }
.animate-alternate-reverse { animation-direction: alternate-reverse; }

/* ==========================================================================
   ANIMATION FILL MODE
   ========================================================================== */

.animate-fill-none { animation-fill-mode: none; }
.animate-fill-forwards { animation-fill-mode: forwards; }
.animate-fill-backwards { animation-fill-mode: backwards; }
.animate-fill-both { animation-fill-mode: both; }

/* ==========================================================================
   ANIMATION PLAY STATE
   ========================================================================== */

.animate-play { animation-play-state: running; }
.animate-pause { animation-play-state: paused; }

/* ==========================================================================
   WILL CHANGE
   ========================================================================== */

.will-change-auto { will-change: auto; }
.will-change-scroll { will-change: scroll-position; }
.will-change-contents { will-change: contents; }
.will-change-transform { will-change: transform; }

/* ==========================================================================
   CONTAIN
   ========================================================================== */

.contain-none { contain: none; }
.contain-strict { contain: strict; }
.contain-content { contain: content; }
.contain-size { contain: size; }
.contain-layout { contain: layout; }
.contain-style { contain: style; }
.contain-paint { contain: paint; }
